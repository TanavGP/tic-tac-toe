* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    height: calc(100 * var(--vh));
    width: calc(100 * var(--vw));
    display: flex;
    flex-direction: column;
    align-content: center;
    justify-content: center;
    text-align: center;

    /* Background Color Properties */
    background-image: radial-gradient(rgb(12, 2, 69), black);
    --human-container-bg-color: rgb(5, 47, 110);
    --ai-container-bg-color: rgb(19, 71, 7);
    --human-switch-button-hover-bg-color: rgb(166, 0, 0);
    --ai-switch-button-hover-bg-color: rgb(1, 139, 1);
    --footer-bg-color: rgb(0, 0, 0);

    /* Text Color Properties */
    color: white;
    --footer-first-link-text-color: rgb(166, 5, 8);
    --footer-second-link-text-color: rgb(4, 68, 163);

    /* Size Properties */
    --switch-svg-size: clamp(30px, 5vw, 50px);
    --square-edge-length: min(650px, calc(75 * var(--vw)));
    --game-control-svg-size: min(70px, calc(7 * var(--vw)));

    /* Font Styles */
    font-family: sans-serif;
}

.header {
    font-size: clamp(1.8rem, 5vw, 3rem);
}

.container-start {
    margin: 40px 0;
    display: grid;
    grid-template-columns: 1fr 1fr;
    height: 350px;
    position: relative;
}

.player-container {
    display: flex;
    flex-direction: column;
    align-items: stretch;
}

.player-container[data-player-type="human"] {
    background-color: var(--human-container-bg-color);
}

.player-container[data-player-type="ai"] {
    background-color: var(--ai-container-bg-color);
}

.switch-container {
    display: flex;
    justify-content: center;
    gap: 20px;
}

.input-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
    margin: auto 0;
}

input {
    width: 80%;
    height: 50px;
    text-align: center;
    border: none;
    border-radius: 5px;
    outline: none;
    font-size: clamp(1rem, 2vw, 1.2rem);
}

input:focus {
    box-shadow: 0 0 5px 1px rgb(0, 255, 255, 0.4);
}

.player-header {
    font-size: clamp(1rem, 3vw, 2rem);
    margin: 20px 0;
}

.switch {
    background: none;
    border: none;
}

.switch .svg {
    margin-bottom: 5px;
}

.switch:disabled {
    border-bottom: 2px solid rgb(0, 255, 255, 0.3);
}

button:not(:disabled):hover.switch[value="human"] .svg {
    background-color: var(--human-switch-button-hover-bg-color);
    cursor: pointer;
    transition: all 0.3s ease-in-out;
}

button:not(:disabled):hover.switch[value="ai"] .svg {
    background-color: var(--ai-switch-button-hover-bg-color);
    cursor: pointer;
    transition: all 0.3s ease-in-out;
}

.vs {
    position: absolute;
    top: 20%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.control-container {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.control-container.in-game {
    margin-top: 5px;
    flex-direction: row;
    align-self: center;
    width: var(--square-edge-length);
    gap: 5px;
}

.scoreboard {
    flex-grow: 1;
    font-size: clamp(1rem, 3.5vw, 2rem);
    color: black;
    border-radius: 2px;
    background-color: rgb(238, 238, 238);
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
}

.auto-play-button {
    width: 50%;
    height: fit-content;
    margin-bottom: 20px;
    font-weight: bold;
    border: none;
    border-radius: 10px;
    font-size: clamp(0.7rem, 2vw, 1.2rem);
    color: aquamarine;
    background-color: rgb(40, 0, 120);
    padding: 10px;
    cursor: pointer;    
    transition: 0.3s ease-in-out;
}

.auto-play-button:hover {
    background-color: rgb(32, 2, 92);
}

.play-button {
    width: 90%;
    height: fit-content;
    font-weight: bold;
    border: none;
    border-radius: 10px;
    font-size: clamp(1rem, 5vw, 2rem);
    color: aquamarine;
    background-color: rgb(40, 0, 120);
    padding: 10px;
    cursor: pointer;
    transition: 0.3s ease-in-out;
}

.play-button:hover {
    background-color: rgb(32, 2, 92);
}

.footer {
    position: fixed;
    bottom: 0;
    width: 100%;
    background-color: var(--footer-bg-color);
    font-size: clamp(0.8rem, 2vw, 1rem);
    padding: 10px 0;
}

.footer > a {
    text-decoration: none;
}

.footer > a:first-child {
    color: var(--footer-first-link-text-color);
}

.footer > a:last-child {
    color: var(--footer-second-link-text-color);
}

.footer > a:hover {
    filter: brightness(0.8);
}

.container {
    display: grid;
    justify-content: center;
    align-self: center;
    width: var(--square-edge-length);
    height: var(--square-edge-length);
    grid-template-rows: repeat(3, 1fr);
    grid-template-columns: repeat(3, 1fr);
    gap: 5px;
}

.container > * {
    display: grid;
    place-items: center;
}

.win-square {
    background-color: green;
}

.win-square > .win-svg {
    background-color: white;
}

/* SCROLLBAR */
.custom-scrollbar {
    width: 80%;
    -webkit-appearance: none;
    appearance: none;
    height: 10px;
    background: #9ffff4;
    outline: none;
    opacity: 0.7;
    transition: opacity 0.15s ease-in-out;
    border-radius: 5px;
}

.custom-scrollbar::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 20px;
    height: 20px;
    background: #007bff;
    cursor: pointer;
    border-radius: 50%;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
}

.custom-scrollbar::-moz-range-thumb {
    width: 20px;
    height: 20px;
    background: #007bff;
    cursor: pointer;
    border-radius: 50%;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
}

/* SVGs */
.svg {
    aspect-ratio: 1 / 1;
    mask-repeat: no-repeat;
    mask-size: contain;
}

.human-svg {
    mask-image: url(graphics/svgs/human.svg);
    background-color: red;
    height: var(--switch-svg-size);
}

.ai-svg {
    mask-image: url(graphics/svgs/ai.svg);
    background-color: rgb(47, 255, 75);
    height: var(--switch-svg-size);
}

.vs-svg {
    mask-image: url(graphics/svgs/vs.svg);
    background-color: rgb(47, 255, 75);
    height: var(--switch-svg-size);
}

.cross-svg {
    mask-image: url(graphics/svgs/cross.svg);
    background-color: rgb(0, 0, 0);
    height: 60%;
}

.circle-svg {
    mask-image: url(graphics/svgs/circle.svg);
    background-color: rgb(0, 0, 0);
    height: 70%;
}

.back-svg {
    mask-image: url(graphics/svgs/back.svg);
    background-color: rgb(255, 0, 0);
    height: var(--game-control-svg-size);
}

.reset-svg {
    mask-image: url(graphics/svgs/reset.svg);
    background-color: rgb(1, 216, 1);
    height: var(--game-control-svg-size);
}

